---
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "@/i18n/utils";
import type { FieldPlayer, Keeper } from "@/types/player";
import { formatPlayerBirthDate } from "@/utils/players";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
  player: FieldPlayer | Keeper;
}

const { player } = Astro.props;

const playerCountry = t(`country.${player.birth_country.toLowerCase()}`);
const birthDate = formatPlayerBirthDate(player.birth_date);
---

<section class="player-birth-info">
  <div>
    <p class="heading">{t("player.info.age")}</p>
    <p class="info">{player.age}</p>
  </div>
  <div>
    <p class="heading">{t("player.info.birthplace")}</p>
    <p class="info">{player.birth_place} ({playerCountry})</p>
  </div>
  <div>
    <p class="heading">{t("player.info.birthday")}</p>
    <p class="info">{birthDate}</p>
  </div>
</section>

<style>
  .player-birth-info {
    background-color: var(--secondary-color);
    width: 100vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 2.5rem;
    padding-bottom: 0.5rem;
    margin-top: 2rem;
    text-align: center;
  }

  .heading {
    color: var(--bg-color);
    text-transform: uppercase;
  }

  .info {
    color: var(--primary-color);
    margin-bottom: 2rem;
    font-size: 1.5rem;
  }

  @media (min-width: 768px) {
    .player-birth-info {
      flex-direction: row;
      justify-content: center;
      gap: 2rem;
      text-align: left;
    }
  }

  @media (min-width: 1000px) {
    .player-birth-info {
      gap: 10rem;
    }
  }
</style>
