---
import PrimaryNav from "@/components/PrimaryNav.astro";
import "@/styles/global.css";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import PlayerBiography from "@/components/PlayerBiography.astro";
import PlayerDetailsPlayerStats from "@/components/PlayerDetailsPlayerStats.astro";
import PlayerDetailsKeeperStats from "@/components/PlayerDetailsKeeperStats.astro";
import { getImagePath } from "@/utils/players";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { player, playerContent, isKeeper } = Astro.props;

const imagePath = getImagePath(player.data);
---

<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{`${player.data.name} ${player.data.first_surname}`}</title>
  </head>
  <body>
    <PrimaryNav />
    <main class="main">
      <header>
        <div class="header-container flex">
          <p class="nickname">{player.data.nickname || player.data.name}</p>
          <div class="image-container">
            <img src={`${imagePath}-celebration.webp`} alt="" />
          </div>
          <div class="player-info-container">
            <p class="player-role">{t(`roles.${player.data.role}`)}</p>
            <div class="flex">
              <p class="player-number">{player.data.number}</p>
              <p class="player-name">
                {player.data.name}
                <span class="player-surname"> {player.data.first_surname}</span>
              </p>
            </div>
            {
              isKeeper ? (
                <PlayerDetailsKeeperStats keeper={player.data} />
              ) : (
                <PlayerDetailsPlayerStats player={player.data} />
              )
            }
          </div>
        </div>
      </header>
      <PlayerBiography player={player} playerContent={playerContent} />
    </main>
  </body>
</html>

<script>
  const dialog = document.querySelector("dialog") as HTMLDialogElement;
  const biographyOpener = document.querySelector(
    "#biography-opener",
  ) as HTMLButtonElement;

  biographyOpener.onclick = () => {
    dialog.show();
  };
</script>

<style>
  body {
    overflow-x: hidden;
  }

  .flex {
    display: flex;
  }

  .header-container {
    flex-direction: column;
    padding-top: 2rem;
    background: var(--bg-color);
    color: var(--bg-color);
    position: relative;
    width: 100vw;
    overflow: hidden;
  }

  .nickname {
    font-size: 7rem;
    text-align: center;
    position: absolute;
    width: max-content;
    overflow: visible;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
    z-index: 5;
    text-transform: uppercase;
    font-weight: 900;
    background-image: linear-gradient(
      180deg,
      var(--bg-color),
      hsla(0, 0%, 100%, 0.1)
    );
    background-clip: text;
    color: transparent;

    @media (min-width: 768px) {
      font-style: italic;
    }
  }

  .image-container {
    width: 100vw;
    padding-top: 5rem;
    position: relative;
    background-image: linear-gradient(
      to right,
      hsla(0, 0%, 0%, 1),
      hsla(0, 0%, 0%, 0.6)
    );
    display: flex;
    justify-content: center;
  }

  .image-container img {
    margin: 0 auto;
    position: relative;
    z-index: 10;
    max-width: 20rem;
    object-fit: cover;
  }

  .player-info-container {
    background-color: var(--secondary-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.25rem;
  }

  .player-role {
    text-transform: uppercase;
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .player-number,
  .player-role {
    opacity: 0.8;
  }

  .player-number,
  .player-name {
    font-size: 1.25rem;
    font-weight: 400;
  }

  .player-name {
    margin-left: 0.5rem;
  }

  .player-surname {
    font-weight: 600;
  }

  @media (min-width: 1200px) {
    header {
      background-image: linear-gradient(
        to right,
        hsla(0, 0%, 0%, 1),
        hsla(0, 0%, 0%, 0.6)
      );
      width: 100vw;
    }
    .header-container {
      flex-direction: row-reverse;
      padding-top: 0;
      background: transparent;
      max-width: 100rem;
      margin: 0 auto;
    }

    .image-container {
      margin-left: auto;
      background-image: none;
      max-height: 35rem;
      overflow-y: hidden;
    }

    .image-container img {
      margin: 0 0 0 auto;
      max-width: 30rem;
      object-position: top;
    }

    .nickname {
      font-size: 20rem;
      opacity: 0.6;
      width: 100vw;
    }

    .player-info-container {
      background-color: transparent;
      position: absolute;
      left: 0;
      top: 30%;
      flex-direction: column-reverse;
    }

    .player-role {
      opacity: 0.8;
      font-size: 1.25rem;
    }

    .player-number,
    .player-role {
      opacity: 0.8;
    }

    .player-number,
    .player-name {
      font-size: 1.5rem;
      font-weight: 400;
      transform: translateY(200%);
    }
  }
</style>

<script>
  const biographyOpener = document.getElementById(
    "biography-opener",
  ) as HTMLButtonElement;
  const biography = document.querySelector(".biography") as HTMLElement;
  const biographyContent = document.querySelector(
    ".biography .content",
  ) as HTMLElement;
</script>
