---
import { getCollection } from "astro:content";
import PlayerDetailsLayout from "@/layouts/PlayerDetailsLayout.astro";
import { playersList, keeperNumbers } from "@/configs/players";
import type { Keeper, Player } from "@/types/player";
import { keepersList } from "@/configs/players";

const { player_number } = Astro.params;
const playersEntries = await getCollection("players");

let player: Player | Keeper | undefined;
let isKeeper: boolean = false;

if (keeperNumbers.includes(player_number)) {
  isKeeper = true;
  player = keepersList.find(
    (keeper: Keeper) => keeper.number.toString() === player_number,
  );
} else {
  player = playersList.find(
    (player: Player) => player.number.toString() === player_number,
  );
}

const playerContent = playersEntries.find(
  (player: any) => player.data.number === player_number,
);

export async function getStaticPaths() {
  const playersEntries = await getCollection("players");

  return playersEntries.map((player: any) => ({
    params: {
      player_number: player.data.number,
    },
  }));
}
---

<PlayerDetailsLayout
  player={player}
  playerContent={playerContent}
  isKeeper={isKeeper}
/>
